#!/bin/bash

source $OPENSHIFT_CARTRIDGE_SDK_BASH

export JAVA_HOME=/etc/alternatives/java_sdk_1.8.0
export PATH=$JAVA_HOME/bin:$PATH


START_COMMAND="${OPENSHIFT_DATA_DIR}/sbt/bin/sbt run"
STOP_COMMAND1="kill $(ps -ef | grep 'sbt run' | grep -v grep | awk '{print $2}')"
STOP_COMMAND1="kill $(ps -ef | grep 'sbt gulpServe' | grep -v grep | awk '{print $2}')"


function is_running() {
  if [ ! -z "$(ps -ef | grep "$START_COMMAND" | grep -v grep)" ]; then
    return 0
  else
    return 1
  fi
}

function build() {
  mkdir -p $OPENSHIFT_DATA_DIR/npmcache

  OLD_HOME=$HOME
  export HOME=$OPENSHIFT_DATA_DIR/npmcache

  cd "${OPENSHIFT_REPO_DIR}"
  ${OPENSHIFT_DATA_DIR}/sbt/bin/sbt compile
  ${OPENSHIFT_DATA_DIR}/sbt/bin/sbt npmInstall
  cd mforecast-web
  npm install --dev

  export HOME=$OLD_HOME
}


function start() {
  if is_running; then
    client_result 'Application is already running.'
  else
    client_message 'Starting application...'
    OLD_HOME=$HOME
    export HOME=$OPENSHIFT_DATA_DIR/npmcache

    cd "${OPENSHIFT_REPO_DIR}"
    ${OPENSHIFT_DATA_DIR}/sbt/bin/sbt compile

    i=0
    while ! is_running && [ $i -lt 60 ]; do
      sleep 1
      i=$(($i + 1))
    done
    if is_running; then
      client_result 'Application started.'
    else
      client_result 'Warning! Could not start application!'
      exit 1
    fi
  fi
}


function stop() {
  if ! is_running; then
    client_result 'Application is already stopped.'
  else
    client_message 'Stopping application...'

    $STOP_COMMAND1 > /dev/null 2>&1
    $STOP_COMMAND2 > /dev/null 2>&1

    i=0
    while is_running && [ $i -lt 60 ]; do
      sleep 1
      i=$(($i + 1))
    done
    if is_running; then
      client_result 'Warning! Could not stop application!'
      exit 1
    else
      client_result 'Application stopped.'
    fi
  fi
}

function restart() {
  stop
  start
}

function status() {
  if is_running; then
    client_result 'Application appears to be running.'
  else
    client_result 'Application appears to be stopped.'
  fi
}


case ${1} in
  pre-repo-archive) exit 0           ;;
  build)            build            ;;
  start)            start            ;;
  stop)             stop             ;;
  restart)          restart          ;;
  status)           status           ;;
  tidy)             exit 0           ;;
  *)                exit 0
esac